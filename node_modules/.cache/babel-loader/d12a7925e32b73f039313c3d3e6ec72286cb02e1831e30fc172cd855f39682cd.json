{"ast":null,"code":"var _jsxFileName = \"/Users/bobbyvelasco/Coding/bitly-take-home/src/components/RickAndMorty/CharacterProfile.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { fetchData } from \"../../helpers\";\nimport styles from \"./CharacterProfile.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterProfile = () => {\n  _s();\n  const [currentCharacter, setCurrentCharacter] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const params = useParams();\n  useEffect(() => {\n    fetchData(`https://rickandmortyapi.com/api/character/${Number(params.id)}`).then(data => setCurrentCharacter(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: JSON.stringify(cur)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterProfile, \"LsaY73m/GTUQNwEUlipyjLWhN+c=\", false, function () {\n  return [useParams];\n});\n_c = CharacterProfile;\nexport default CharacterProfile;\nconst CharacterCard = _ref => {\n  let {\n    character\n  } = _ref;\n  const {\n    name,\n    status,\n    species,\n    gender,\n    image,\n    origin,\n    episodeCount\n  } = character;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.cardImg,\n        src: image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classNames(styles.cardName, \"font-medium\"),\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(styles.statsBlock, \"font-small\"),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Species: \", species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Origin: \", origin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Episode Count: \", episodeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CharacterCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"CharacterProfile\");\n$RefreshReg$(_c2, \"CharacterCard\");","map":{"version":3,"names":["useState","useEffect","useParams","classNames","fetchData","styles","jsxDEV","_jsxDEV","CharacterProfile","_s","currentCharacter","setCurrentCharacter","loading","setLoading","params","Number","id","then","data","className","children","JSON","stringify","cur","fileName","_jsxFileName","lineNumber","columnNumber","_c","CharacterCard","_ref","character","name","status","species","gender","image","origin","episodeCount","card","cardImg","src","alt","cardName","statsBlock","_c2","$RefreshReg$"],"sources":["/Users/bobbyvelasco/Coding/bitly-take-home/src/components/RickAndMorty/CharacterProfile.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { fetchData } from \"../../helpers\";\n\n\nimport styles from \"./CharacterProfile.module.scss\";\n\nconst CharacterProfile: React.FunctionComponent = () => {\n  const [currentCharacter, setCurrentCharacter] = useState<any>(null)\n  const [loading, setLoading] = useState(false)\n  const params = useParams();\n\n\n  useEffect(() => {\n    fetchData(`https://rickandmortyapi.com/api/character/${Number(params.id)}`)\n      .then(data => setCurrentCharacter(data))\n  }, [])\n\n\n  return (\n    <div className=\"page\">\n      {JSON.stringify(cur)}\n    </div>\n  );\n};\n\nexport default CharacterProfile;\n\nconst CharacterCard = ({ character }: { character: any }) => {\n  const { name, status, species, gender, image, origin, episodeCount } =\n    character;\n  return (\n    <div className={styles.card}>\n      <div>\n        <img className={styles.cardImg} src={image} alt=\"\" />\n        <h3 className={classNames(styles.cardName, \"font-medium\")}>{name}</h3>\n      </div>\n      <div className={classNames(styles.statsBlock, \"font-small\")}>\n        <p>Status: {status}</p>\n        <p>Species: {species}</p>\n        <p>Gender: {gender}</p>\n        <p>Origin: {origin}</p>\n        <p>Episode Count: {episodeCount}</p>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}