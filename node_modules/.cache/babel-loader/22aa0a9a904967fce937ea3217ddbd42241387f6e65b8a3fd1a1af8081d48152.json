{"ast":null,"code":"var _jsxFileName = \"/Users/bobbyvelasco/Coding/bitly-take-home/src/components/RickAndMorty/CharacterIndex.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Tile from '../shared/Tile/Tile';\nimport Spinner from '../shared/Spinner/Spinner';\nimport { fetchData } from '../../helpers';\nimport styles from './CharacterIndex.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst showLogo = \"https://media.cdn.adultswim.com/uploads/20210428/21428161947-rick-and-morty-logo-png.png\";\nexport const favoriteCharactersIds = [47, 242, 252, 262, 306, 327, 353, 388, 636];\nconst CharacterIndex = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetchData(`https://rickandmortyapi.com/api/character/${favoriteCharactersIds}`).then(data => {\n      setData(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.headerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.showLogo,\n        src: showLogo,\n        alt: \"showLogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classNames(\"font-medium\", styles.subheader),\n        role: \"textbox\",\n        children: \"Get some fun and interesting deets about your favorite interdimesional characters...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: data.map(character => {\n        const {\n          id,\n          name,\n          image\n        } = character;\n        return /*#__PURE__*/_jsxDEV(Tile, {\n          link: `/rick-and-morty/${id}`,\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.tileImgContainer,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.tileImg,\n                  src: image,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classNames(styles.tileName, \"font-medium\"),\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          }\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterIndex, \"e2WPURhZO+vgWkProC5DhPL24KA=\");\n_c = CharacterIndex;\nexport default CharacterIndex;\nvar _c;\n$RefreshReg$(_c, \"CharacterIndex\");","map":{"version":3,"names":["useState","useEffect","classNames","Tile","Spinner","fetchData","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","showLogo","favoriteCharactersIds","CharacterIndex","_s","data","setData","loading","setLoading","then","catch","error","console","fileName","_jsxFileName","lineNumber","columnNumber","className","children","headerContainer","src","alt","subheader","role","grid","map","character","id","name","image","link","render","tileImgContainer","tileImg","tileName","_c","$RefreshReg$"],"sources":["/Users/bobbyvelasco/Coding/bitly-take-home/src/components/RickAndMorty/CharacterIndex.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport classNames from 'classnames'\n\nimport Tile from '../shared/Tile/Tile'\nimport Spinner from '../shared/Spinner/Spinner'\nimport { fetchData } from '../../helpers'\n\nimport styles from './CharacterIndex.module.scss'\n\nconst showLogo = \"https://media.cdn.adultswim.com/uploads/20210428/21428161947-rick-and-morty-logo-png.png\"\nexport const favoriteCharactersIds = [47, 242, 252, 262, 306, 327, 353, 388, 636];\n\nconst CharacterIndex: React.FunctionComponent = () => {\n  const [data, setData] = useState<any>([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n\n    fetchData(`https://rickandmortyapi.com/api/character/${favoriteCharactersIds}`)\n      .then(data => {\n        setData(data)\n        setLoading(false)\n      })\n      .catch(error => {\n        console.error(error)\n        setLoading(false)\n      })\n  }, [])\n\n  if (loading) return <Spinner />\n\n  return (\n    <div className=\"page\">\n      <div className={styles.headerContainer}>\n        <img className={styles.showLogo} src={showLogo} alt=\"showLogo\" />\n        <p className={classNames(\"font-medium\", styles.subheader)} role=\"textbox\">\n          Get some fun and interesting deets about your favorite interdimesional characters...\n        </p>\n      </div>\n\n      <div className={styles.grid}>\n        {data.map((character: any) => {\n          const { id, name, image } = character\n          return (\n            <Tile\n              key={id}\n              link={`/rick-and-morty/${id}`}\n              render={() => {\n                return (\n                  <>\n                    <div className={styles.tileImgContainer}>\n                      <img className={styles.tileImg} src={image} alt=\"\" />\n                    </div>\n                    <p className={classNames(styles.tileName, \"font-medium\")}>{name}</p>\n                  </>\n                )\n              }}\n            />\n        )})}\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterIndex\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}